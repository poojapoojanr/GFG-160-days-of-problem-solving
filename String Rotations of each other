#User function Template for python3
def LPS(pat):
    n = len(pat)
    lps = [0]*n
    j=0
    i=1
    #lps[0]=0
    while i < n:
        if pat[i]==pat[j]:
            j+=1
            lps[i]=j
            i+=1
        else :
            if j!= 0 :
                j = lps[j-1]
            else :
                lps[i]=0
                i+=1
    #print(lps)
    return lps
            
class Solution:
    
    #Function to check if two strings are rotations of each other or not.
    def areRotations(self,s1,s2):
        text=s1+s1
        n = len(text)
        m = len(s2)
        lps = LPS(s2)
        #code here
        
        i = j = 0
        while i< n:
            if text[i] == s2[j]:
                i+=1
                j+=1
            if j == m:
                #print(i)
                return True
            elif i < n and s2[j] != text[i]:
                    if j!=0:
                        j = lps[j-1]
                    else :
                        i+=1
        return False
      
        
                
                
                
            


#{ 
 # Driver Code Starts
#Initial Template for Python 3
import atexit
import io
import sys

_INPUT_LINES = sys.stdin.read().splitlines()
input = iter(_INPUT_LINES).__next__
_OUTPUT_BUFFER = io.StringIO()
sys.stdout = _OUTPUT_BUFFER


@atexit.register
def write():
    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())


if __name__ == '__main__':
    t = int(input())
    for i in range(t):
        s1 = str(input())
        s2 = str(input())
        if (Solution().areRotations(s1, s2)):
            print("true")
        else:
            print("false")

# } Driver Code Ends
